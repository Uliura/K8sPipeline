trigger: none
variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'dockersc'
  imageRepository: 'pipelinerepa'
  containerRegistry: 'aksagent.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'pipelinerepogeka-auth'
  kubernetesconnection: 'kubeconnection'
  resourcegroupname: "AzureDevOps"
  aksclustename: "mynewpwshclaster"
  azurelocation: "eastus"      

  
stages:

  - stage: powershell
    displayName: Build infrastructure
    jobs:
    - job: Powershell
      displayName: Powershell Infra
      pool:
        name: My-AKS-Pool
      steps:
        - task: AzureCLI@2
          name: setVariables
          displayName: Set Output Variables
          continueOnError: false
          inputs:
            azureSubscription: nameOfAzureServiceConnection
            scriptType: ps
            scriptLocation: inlineScript
            addSpnToEnvironment: true
            inlineScript: |
              Write-Host "##vso[task.setvariable variable=azureClientId;isOutput=true]$($env:servicePrincipalId)"
              Write-Host "##vso[task.setvariable variable=azureClientSecret;isOutput=true]$($env:servicePrincipalKey)"
              Write-Host "##vso[task.setvariable variable=azureTenantId;isOutput=true]$($env:tenantId)"


        - task: AzurePowerShell@5
          inputs:
            azureSubscription: 'AzureDevOpsServCon'
            ScriptType: 'InlineScript'
            Inline: |
              $pscredential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $(setVariables.azureClientId), $(setVariables.azureClientSecret)
              Connect-AzAccount -ServicePrincipal -Credential $pscredential -Tenant $(setVariables.azureTenantId)
              New-AzResourceGroup -Name $env:resourcegroupname -Location $env:azurelocation -Force
            azurePowerShellVersion: 'LatestVersion'
            pwsh: true
            
  - stage: BuildDocker
    displayName: Build docker
    jobs:
    - job: builddocker
      displayName: Build docker
      pool:
        name: Azure Pipelines
      steps:
        - template: dockerbuild.yml
        - task: PublishPipelineArtifact@1
          inputs:
            artifactName: 'allmanifests.yaml'
            path: './'

  - stage: DeployDocker
    displayName: Deploy docker
    jobs:
    - job: DeployDocker
      displayName: Deploy docker
      pool:
        name: My-AKS-Pool
      steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'lmanifests.yaml'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'AzureDevOpsServCon'
              ScriptType: 'InlineScript'
              Inline: |
                Install-AzAksKubectl -Force
                Import-AzAksCredential -ResourceGroupName $(resourcegroupname) -Name $(aksclustename) -Force
                kubectl apply -f allmanifest.yaml
              azurePowerShellVersion: 'LatestVersion'
              pwsh: true
          