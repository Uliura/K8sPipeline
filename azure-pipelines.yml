trigger: none
variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'dockersc'
  imageRepository: 'pipelinerepa'
  containerRegistry: 'aksagent.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'pipelinerepogeka-auth'
  kubernetesconnection: 'kubeconnection'
  resourcegroupname: Pipeline
  aksclustername: xzklaster
  azurelocation: northeurope      

  
stages:

  - stage: powershell
    displayName: Build infrastructure
    jobs:
    - job: Powershell
      displayName: Powershell Infra
      pool:
        name: My-AKS-Pool
      steps:

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              apt update
              apt install openssh-server
        - task: AzureCLI@2
          inputs:
            azureSubscription: 'PipelineSC'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 'az aks create --resource-group $(resourcegroupname) --name $(aksclustername) --node-count 1 --no-ssh-key --node-vm-size standard_D2ads_v5'
            addSpnToEnvironment: true
            useGlobalConfig: true

  - stage: BuildDocker
    displayName: Build docker
    jobs:
    - job: builddocker
      displayName: Build docker
      pool:
        name: Azure Pipelines
      steps:
        - template: dockerbuild.yml
        - task: PublishPipelineArtifact@1
          inputs:
            artifactName: 'allmanifests.yaml'
            path: './'

  - stage: DeployDocker
    displayName: Deploy docker
    jobs:
    - job: DeployDocker
      displayName: Deploy docker
      pool:
        name: My-AKS-Pool
      steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'allmanifests.yaml'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'PipelineSC'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az aks get-credentials --resource-group $(resourcegroupname) --name $(aksclustername)
                az aks install-cli 
                kubectl apply -f allmanifest.yaml
              addSpnToEnvironment: true
              useGlobalConfig: true
          